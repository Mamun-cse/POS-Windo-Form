<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>